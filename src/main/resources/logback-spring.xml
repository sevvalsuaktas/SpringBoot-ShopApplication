<configuration scan="true">

    <!--Spring Boot’un default ayarlarını ve renkli konsol desteği -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- LOG_FILE konfigürasyonunu dışarıdan override edebilmek için bir property -->
    <property name="LOG_FILE" value="${LOG_FILE:-logs/shop-app.log}"/>

    <!-- Konsola yazmak için appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %clr(%d{yyyy‑MM‑dd HH:mm:ss.SSS}){faint} %clr([%thread]){faint} %clr(%-5level) %clr(%logger{36}){cyan} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- Dosyaya günlük yazmak için rolling file appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- Her gün yeni bir dosya, 30 gün sakla -->
            <fileNamePattern>logs/shop-app.%d{yyyy‑MM‑dd}.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy‑MM‑dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Root logger: tüm uygulama INFO seviyesinden başlayacak -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>

    <!-- Kendi paketinizin tamamını DEBUG seviyesinde görmek istersek -->
    <logger name="com.example.shop" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </logger>

</configuration>
